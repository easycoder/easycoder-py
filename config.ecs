!   config.ecs

    script Configurator

    use graphics

    window Window
    window Dialog
    layout MainPanel
    layout LeftPanel
    layout RightPanel
    layout DeviceHPanel
    layout OuterLayout
    layout Layout
    layout VLayout
    layout HLayout
    groupbox Group
    label Label
    label RelayStateLabel
    label StatusLabel
    pushbutton ResetConfigButton
    pushbutton ScanDevicesButton
    pushbutton ClearSystemButton
    pushbutton DeleteSlaveButton
    pushbutton UpdateDeviceButton
    pushbutton DeleteFileButton
    pushbutton ExitButton
    pushbutton ScanSystemsButton
    pushbutton RemoveSystemButton
    pushbutton MasterDeviceButton
    pushbutton RelayOffButton
    pushbutton RelayOnButton
    pushbutton SaveWidgetDataButton
    pushbutton OKButton
    pushbutton CancelButton
    lineinput LineInput
    lineinput DeviceNameInput
    lineinput ChannelInput
    lineinput LEDPinInput
    lineinput RelayPinInput
    lineinput DHT22PinInput
    lineinput PathInput
    listbox ListBox
    listbox SlaveList
    combobox SystemsCombo
    checkbox LEDInvertCheckbox
    checkbox RelayInvertCheckbox
    messagebox MessageBox

!    debug step

    log `Starting`
    init graphics
    create MainPanel type QHBoxLayout

    ! Do the left-hand panel

    create LeftPanel type QVBoxLayout
    add LeftPanel to MainPanel
    create ResetConfigButton text `Reset everything`
    on click ResetConfigButton go to ResetConfigFileClick
    add ResetConfigButton to LeftPanel

    create ClearSystemButton text `Clear the selected system`
    on click ClearSystemButton go to ClearSystemClick
    add ClearSystemButton to LeftPanel

    create ScanDevicesButton text `Scan for devices`
    on click ScanDevicesButton go to ScanForDevicesClick
    add ScanDevicesButton to LeftPanel

    create UpdateDeviceButton text `Update device`
    on click UpdateDeviceButton go to UpdateDeviceClick
    add UpdateDeviceButton to LeftPanel

    create DeleteFileButton text `Delete file`
    add DeleteFileButton to LeftPanel
    on click DeleteFileButton go to DeleteFileClick

    create DeleteSlaveButton text `Delete slave`
    add DeleteSlaveButton to LeftPanel
    on click DeleteSlaveButton go to DeleteSlaveClick

    add stretch to LeftPanel

    create ExitButton text `Exit`
    add ExitButton to LeftPanel
    on click ExitButton go to ExitClick

    ! Now do the right-hand panel

    create RightPanel type QVBoxLayout
    add stretch RightPanel to MainPanel

    ! Create the system name group
    create Group title `Systems`
    set the height of Group to 50
    add Group to RightPanel
    create Layout type QHBoxLayout
    add Layout to Group
    create SystemsCombo
    on select SystemsCombo go to SystemsComboSelect
    add stretch SystemsCombo to Layout
    create ScanSystemsButton text `System Scan`
    disable ScanSystemsButton
    on click ScanSystemsButton go to ScanSystemsClick
    add ScanSystemsButton to Layout
    create RemoveSystemButton text `Remove`
    disable RemoveSystemButton
    on click RemoveSystemButton go to RemoveSystemClick
    add RemoveSystemButton to Layout
    
    ! Create the Master Device group
    create Group title `Master device`
    set the height of Group to 50
    add Group to RightPanel
    create Layout type QHBoxLayout
    add Layout to Group
    create MasterDeviceButton text `(none)`
    add MasterDeviceButton to Layout
    on click MasterDeviceButton go to MasterDeviceClick
    
    ! Create the Slave Devices group
    create Group title `Slave devices`
    set the height of Group to 150
    add Group to RightPanel
    create Layout type QHBoxLayout
    add Layout to Group
    create SlaveList
    add SlaveList to Layout
    on select SlaveList go to SelectSlaveClick

    ! Create the Selected Device group
    create Group title `Selected device`
    set the height of Group to 150
    add Group to RightPanel

    create DeviceHPanel type QHBoxLayout
    add DeviceHPanel to Group

    create OuterLayout type QVBoxLayout
    add OuterLayout to DeviceHPanel

    create Layout type QHBoxLayout
    add Layout to OuterLayout
    create Label text `Name:`
    add Label to Layout
    create DeviceNameInput size 40
    add DeviceNameInput to Layout
    create Label text `Channel:`
    add Label to Layout
    create ChannelInput size 5
    add ChannelInput to Layout
    add stretch to Layout
    
    create Layout type QHBoxLayout
    add Layout to OuterLayout
    create Label text `LED Pin:`
    add Label to Layout
    create LEDPinInput size 5
    add LEDPinInput to Layout
    create LEDInvertCheckbox text `Inverted`
    add LEDInvertCheckbox to Layout
    add stretch to Layout
    
    create Layout type QHBoxLayout
    add Layout to OuterLayout
    create Label text `Relay Pin:`
    add Label to Layout
    create RelayPinInput size 5
    add RelayPinInput to Layout
    create RelayInvertCheckbox text `Inverted`
    add RelayInvertCheckbox to Layout
    create RelayOffButton size 5 text `-`
    on click RelayOffButton go to RelayOffClick
    add RelayOffButton to Layout
    create RelayOnButton size 5 text `+`
    on click RelayOnButton go to RelayOnClick
    add RelayOnButton to Layout
    create RelayStateLabel size 5 text `???`
    add RelayStateLabel to Layout
    add stretch to Layout
    
    create Layout type QHBoxLayout
    add Layout to OuterLayout
    create Label text `DHT22 Pin:`
    add Label to Layout
    create DHT22PinInput size 5
    add DHT22PinInput to Layout
    add stretch to Layout
    
    create Layout type QHBoxLayout
    add Layout to OuterLayout
    create Label text `Path:`
    add Label to Layout
    create PathInput size 60
    add PathInput to Layout
    add stretch to Layout

    ! The 'Save' button
    create Layout type QVBoxLayout
    add Layout to DeviceHPanel
    create SaveWidgetDataButton text `Save`
    on click SaveWidgetDataButton go to SaveWidgetData
    add SaveWidgetDataButton to Layout

    add stretch to RightPanel

    create StatusLabel align right
    gosub to OK 
    add StatusLabel to RightPanel

    create Window title `RBR-Now configurator` size 700 500 layout MainPanel
    show Window

    start graphics

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

    variable Config
    variable ConfigFile
    variable Name
    variable Value
    variable ReturnValue
    variable Title
    variable Result
    variable List
    variable Item
    variable SSID
    variable Password
    variable MAC
    variable IPAddr
    variable MyIPAddr
    variable Prompt
    variable SystemConfig
    variable SystemCallResult
    variable StatusMessage
    variable Systems
    variable System
    variable Devices
    variable Device
    variable MasterDevice
    variable MasterSSID
    variable MasterIPAddr
    variable MasterDeviceName
    variable SlaveDevices
    variable RBRFlag
    variable Keys
    variable D
    variable N
    variable P
    variable S

!    debug step

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!   The main program starts here
Start:

!   Disable various buttons
    disable ClearSystemButton
    disable ScanDevicesButton
    disable DeleteSlaveButton
    disable UpdateDeviceButton
    disable DeleteFileButton

!   Load the main config file or create one if there is none
    put trim system `echo $HOME` cat `/.rbr.conf` into ConfigFile
    load Config from ConfigFile
    if Config is empty put json `{}` into Config else put json Config into Config

!   Look for the host SSID and password. If they're not found, scan for them
    if Config does not have property `host-ssid`
    begin
        clear RBRFlag
        gosub to GetAccessPoints
        put `Select SSID` into Title
        put `Select the home router for this system` into Prompt
        gosub to SelectSSIDFromList
        if Item is empty go to Start
        set property `host-ssid` of Config to Item
        if Config does not have property `host-password` gosub to GetHostPassword
        set property `host-password` of Config to ReturnValue
    end

!   Check we're on the right AP. If not, connect to it
    put `Checking current SSID...` into StatusMessage
    gosub to Working
    put trim system `LANG=C nmcli -t -f active,ssid dev wifi | grep ^yes | cut -d: -f2-` into SSID
    if SSID is not property `host-ssid` of Config gosub to ConnectToHost
    put `Connected to ` cat SSID into StatusMessage
    gosub to Idle

!   Get the list of systems, or create an empty list. Then populate the combo box
    if Config has property `systems` put property `systems` of Config into Systems
    else
    begin
        put json `{}` into Systems
        set property `systems` of Config to Systems
    end
    gosub to RefreshSystemsCombo

!   Read config data for each of the systems
    gosub to GetConfigData

!   Select the current system
    if Config has property `current` put property `current` of Config into Name
    else
    begin
        if the count of SystemsCombo is 0 put empty into Name
        else
        begin
            put the keys of Systems into Keys
            put element 0 of Keys into Name
        end
        set property `current` of Config to Name
    end
    if Name is not empty
    begin
        select Name in SystemsCombo
        enable ClearSystemButton
        gosub to SetupSystem
    end

    enable ScanSystemsButton
    enable ScanDevicesButton
    stop

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!   Event handlers
ResetConfigFileClick:
    create MessageBox on Window
        style question
        title `Master reset`
        message `This will remove all information. Continue?`
    show MessageBox giving Value
    if Value is `Yes`
    begin
        delete file ConfigFile
        disable RemoveSystemButton
        set the text of MasterDeviceButton to `(none)`
        clear SlaveList
        go to Start
    end
    stop

ClearSystemClick:
    create MessageBox on Window
        style question
        title `System clear`
        message `This will remove all devices from ` cat SystemsCombo 
            cat `. Continue?`
    show MessageBox giving Value
    if Value is `Yes`
    begin
        put SystemsCombo into Name
        put property Name of Systems into SystemConfig
        put property `mac` of SystemConfig into MAC
        put property `password` of SystemConfig into Password
        put json `{}` into Devices
        set property `devices` of SystemConfig to Devices
        set property Name of Systems to SystemConfig
        set property `systems` of Config to Systems
        post stringify SystemConfig to
            `https://rbrheating.com/ui/resources/php/rest.php/config/`
                cat MAC cat `/` cat Password
        or begin
            log `I couldn't post the config file`
            stop
        end
        disable RemoveSystemButton
        set the text of MasterDeviceButton to `(none)`
        clear SlaveList
    end
    stop

ScanForDevicesClick:
    put system `nmcli device wifi list` into SystemCallResult
    log SystemCallResult
    split SystemCallResult
    put json `[]` into List
    put 1 into N
    while N is less than the elements of SystemCallResult
    begin
        index SystemCallResult to N
        put SystemCallResult into SSID
        if left 1 of SSID is `*` begin end
        else
        begin
            put trim SSID into SSID
            put the position of ` ` in SSID into P
            put from P of SSID into SSID
            put trim SSID into SSID
            put the position of ` ` in SSID into P
            put left P of SSID into SSID
            if left 7 of SSID is `RBR-Now`
            begin
                append SSID to List
            end
        end
        increment N
    end
!    log `SSIDs: ` cat List
    put `Select Device` into Title
    put `Select the new device` into Prompt
    gosub to SelectSSIDFromList
    log `Selected ` cat Item
    stop

MasterDeviceClick:
    log MasterDeviceButton
    if MasterDeviceButton is not empty
    begin
        log `Select the master device`
        set the text of DeviceNameInput to MasterDeviceName
        enable UpdateDeviceButton
        enable DeleteFileButton
        disable DeleteSlaveButton
    end
    stop

SelectSlaveClick:
    log `Select ` cat SlaveList
    set the text of DeviceNameInput to SlaveList
    enable UpdateDeviceButton
    enable DeleteSlaveButton
    enable DeleteFileButton
    stop

UpdateDeviceClick:
    log `Update the files om the selected device`
    stop

DeleteFileClick:
    log `Delete a file on the selected device`
    stop

DeleteSlaveClick:
    log `Delete the selected slave device`
    stop

ScanSystemsClick:
    log `Scan systems`
    gosub to ScanSystems
    gosub to RefreshSystemsCombo
    gosub to GetConfigData
    stop

SystemsComboSelect:
    put SystemsCombo into Name
    set property `current` of Config to Name
    gosub to SetupSystem
    stop

RemoveSystemClick:
    put SystemsCombo into Name
    log `Remove ` cat Name cat `?`
    create MessageBox on Window
        style question
        title `Remove system`
        message `Continue you want to remove ` cat Name cat `?`
    show MessageBox giving Value
    if Value is `Yes`
    begin
        remove current item from SystemsCombo
        delete property Name of Systems
        set property `systems` of Config to Systems
    end
    if the count of SystemsCombo is 0 disable RemoveSystemButton
    stop

SaveHostInfoClick:
    log `Save the host information`
    stop

SaveWidgetDataClick:
    log `Save the widget data`
    stop

RelayOffClick:
    log `Turn the relay OFF`
    stop

RelayOnClick:
    log `Turn the relay ON`
    stop

ExitClick:
    log `Exit the configurator`
    save stringify Config to ConfigFile
    close Window
    exit

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!   Subroutines

GetHostPassword:
    log `Get the host password`
    put `Type the host password:` into Prompt
    put `Host password` into Title
    go to GetRequestedText

GetRequestedText:
    create VLayout type QVBoxLayout
    create Label text Prompt align centre
    add label to VLayout
    create HLayout type QHBoxLayout
    add HLayout to VLayout
    create LineInput size 40
    add stretch LineInput to HLayout
    create HLayout type QHBoxLayout
    add HLayout to VLayout
    create OKButton text `OK` size 6
    on click OKButton
    begin
        put LineInput into ReturnValue
        put `OK` into Result
        close Dialog
        return
    end
    add OKButton to HLayout
    create CancelButton text `Cancel` size 6
    on click CancelButton
    begin
        put `Cancel` into Result
        close Dialog
        return
    end
    add CancelButton to HLayout
    create Dialog title Title layout VLayout size 300 80
    center Dialog on Window
    show Dialog
    stop

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!   Select an SSID from the list
SelectSSIDFromList:
    create Layout type QVBoxLayout
    create Label text Prompt align center
    add Label to Layout
    create ListBox
    put 0 into N
    while N is less than the count of List
    begin
        add element N of List to ListBox
        increment N
    end
    on select ListBox
    begin
        put the current item in ListBox into Item
        put Item cat ` Selected ` into StatusMessage
        gosub to Idle
        close Dialog
        return
    end
    add ListBox to Layout
    add stretch to Layout
    create HLayout type QHBoxLayout
    create CancelButton text `Cancel`
    on click CancelButton
    begin
        put empty into Item
        close Dialog
        return
    end
    add CancelButton to HLayout
    add HLayout to Layout
    create Dialog title Title layout Layout size 250 200
    center Dialog on Window
    show Dialog
    stop

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!   Scan the network for access points
GetAccessPoints:
    log `Scanning the local network...`
    put `Scanning the local network...` into StatusMessage
    gosub to Working
    put system `nmcli device wifi list` into Result
!    log Result
    gosub to OK
    split Result
    put json `[]` into List
    put 1 into N
    while N is less than the elements of Result
    begin
        index Result to N
        put Result into SSID
        if left 1 of SSID is `*` begin end
        else
        begin
            put trim SSID into SSID
            put the position of ` ` in SSID into P
            put from P of SSID into SSID
            put trim SSID into SSID
            put the position of ` ` in SSID into P
            put left P of SSID into SSID
            if SSID is empty go to SN2
            if left 1 of SSID is `-` go to SN2
            if RBRFlag
            begin
                if left 7 of SSID is `RBR-Now`
                begin
                    append SSID to List
                end
            end
            else append SSID to List
        end
    SN2:
        increment N
    end
!    log `SSIDs: ` cat List
    return

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!   Connect to the host router
ConnectToHost:
    put property `host-ssid` of Config into SSID
    put property `host-password` of Config into Password
    put `Connecting to ` cat SSID cat ` with password ` cat Password into StatusMessage
    log StatusMessage
    gosub to Working
    put system `nmcli dev wifi connect ` cat SSID cat ` password ` cat Password into SystemCallResult
    split SystemCallResult on ` `
    if the elements of SystemCallResult is greater than 2
    begin
        index SystemCallResult to 2
        if SystemCallResult is `successfully` go to OK
    end
    put `Failed to connect to ` cat SSID into StatusMessage
    gosub to Idle
    log StatusMessage
    return

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!   Scan the network for RBR system controllers
ScanSystems:
    put trim system `hostname -I` into MyIPAddr
!    log MyIPAddr
    put the position of the last `.` in MyIPAddr into P
    increment P
    put left P of MyIPAddr into Value
    put json `[]` into List
    put 1 into N
    while N is less than 255
    begin
        put Value cat N into IPAddr
        put `Scanning ` cat IPAddr into StatusMessage
        gosub to Working
        get Result from url `http://` cat IPAddr cat `:17348/cgi-bin/mac.py` timeout 1 or go to SS2
        put trim Result into Result
        log IPAddr cat `: ` cat Result
        put the position of ` ` in Result into P
        put left P of Result into MAC
        increment P
        put from P of Result into Result
        put the position of ` ` in Result into P
        put left P of Result into Password
        increment P
        put from P of Result into Name
        put json `{}` into Item
        set property `ipaddr` of Item to IPAddr
        set property `mac` of Item to MAC
        set property `password` of Item to Password
        set property Name of Systems to Item
        append IPAddr to List
    SS2:
        wait 10 ticks
        increment N
    end
    set property `systems` of Config to Systems
    go to OK

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!   Get the config data for each of the systems
GetConfigData:
    put the keys of Systems into Keys
    put 0 into S
    while S is less than the count of Keys
    begin
        put element S of Keys into Name
        put property Name of Systems into SystemConfig
        put property `mac` of SystemConfig into MAC
        put property `password` of SystemConfig into Password
        get Value from url `https://rbrheating.com/ui/resources/php/rest.php/config/`
            cat MAC cat `/` cat Password
        or log `Can't read the config file for ` cat Name
!        log Value cat newline
        put json Value into Value
        if Value has property `devices`
            set property `devices` of SystemConfig to property `devices` of Value
        else set property `devices` of SystemConfig to json `{}`
        set property Name of Systems to SystemConfig
        increment S
    end
    set property `systems` of Config to Systems
    return

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!   Refresh the systems combobox
RefreshSystemsCombo:
    clear SystemsCombo
    put the keys of Systems into Keys
    put 0 into S
    while S is less than the count of Keys
    begin
        put element S of Keys into Name
        add Name to SystemsCombo
        enable RemoveSystemButton
        increment S
    end
    return

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!   Set up the system, given its name
SetupSystem:
    if Name is empty return
    put property Name of Systems into System
    put property `devices` of System into Devices
    put the keys of Devices into Keys
    put empty into MasterDevice
    set the text of MasterDeviceButton to `(none)`
    put json `[]` into SlaveDevices
    clear SlaveList
    put 0 into D
    while D is less than the count of Keys
    begin
        put element D of Keys into Name
        put property Name of Devices into Device
        if property `master` of Device
        begin
            put Device into MasterDevice
            put property `ssid` of MasterDevice into MasterSSID
            put property `ipaddr` of MasterDevice into MasterIPAddr
            put Name into MasterDeviceName
            set the text of MasterDeviceButton to MasterSSID cat ` ` cat MasterIPAddr cat ` ` cat Name
        end
        else
        begin
            append Name to SlaveDevices
            add Name to SlaveList
        end
        increment D
    end
    return

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!   The Status box at the bottom of the screen
OK:
    put `OK` into StatusMessage

Idle:
    set the text of StatusLabel to `<font color="#008000">` cat StatusMessage cat `</font>`
    return

Working:
    set the text of StatusLabel to `<font color="#aa4000">` cat StatusMessage cat `</font>`
    wait 50 ticks
    return
